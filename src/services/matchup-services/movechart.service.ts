import { TypeName } from "@pkmn/data";
import { DraftSpecies, Pokemon } from "../../classes/pokemon";
import { Ruleset } from "../../data/rulesets";
import { PokemonData } from "../../models/pokemon.schema";

const MOVECATEGORIES = [
  "Priority",
  "Setup",
  "Cleric",
  "Momentum",
  "Hazard Control",
  "Speed Control",
  "Support",
  "Status",
  "Disruption",
  "Field Manipulation",
  "Trapping",
  "Type Changing",
  "Z-Setup",
] as const;

type MoveCategory = (typeof MOVECATEGORIES)[number];

const moveList: { [key: string]: MoveCategory[] } = {
  accelerock: ["Priority"],
  aquajet: ["Priority"],
  bulletpunch: ["Priority"],
  extremespeed: ["Priority"],
  fakeout: ["Priority"],
  feint: ["Priority"],
  firstimpression: ["Priority"],
  iceshard: ["Priority"],
  jetpunch: ["Priority"],
  machpunch: ["Priority"],
  quickattack: ["Priority"],
  shadowsneak: ["Priority"],
  suckerpunch: ["Priority"],
  thunderclap: ["Priority"],
  upperhand: ["Priority"],
  vacuumwave: ["Priority"],
  watershuriken: ["Priority"],
  zippyzap: ["Priority"],
  acidarmor: ["Setup"],
  agility: ["Setup"],
  amnesia: ["Setup"],
  aromaticmist: ["Setup"],
  autotomize: ["Setup"],
  barrier: ["Setup"],
  bulkup: ["Setup"],
  calmmind: ["Setup"],
  charge: ["Setup"],
  clangoroussoul: ["Setup"],
  coil: ["Setup"],
  cosmicpower: ["Setup"],
  cottonguard: ["Setup"],
  curse: ["Setup"],
  decorate: ["Setup"],
  defendorder: ["Setup"],
  defensecurl: ["Setup"],
  doubleteam: ["Setup"],
  dragondance: ["Setup"],
  extremeevoboost: ["Setup"],
  filletaway: ["Setup"],
  flatter: ["Setup"],
  focusenergy: ["Setup"],
  geomancy: ["Setup", "Z-Setup"],
  growth: ["Setup"],
  harden: ["Setup"],
  honeclaws: ["Setup"],
  howl: ["Setup"],
  irondefense: ["Setup"],
  meditate: ["Setup"],
  minimize: ["Setup"],
  nastyplot: ["Setup"],
  noretreat: ["Setup"],
  quiverdance: ["Setup"],
  rockpolish: ["Setup"],
  sharpen: ["Setup"],
  shellsmash: ["Setup"],
  shelter: ["Setup"],
  shiftgear: ["Setup"],
  spicyextract: ["Setup"],
  swagger: ["Setup"],
  swordsdance: ["Setup"],
  tailglow: ["Setup"],
  tidyup: ["Setup", "Hazard Control"],
  victorydance: ["Setup"],
  withdraw: ["Setup"],
  workup: ["Setup"],
  floralhealing: ["Cleric"],
  healingwish: ["Cleric"],
  healorder: ["Cleric"],
  healpulse: ["Cleric"],
  junglehealing: ["Cleric"],
  leechseed: ["Cleric"],
  lifedew: ["Cleric"],
  lunarblessing: ["Cleric"],
  lunardance: ["Cleric"],
  milkdrink: ["Cleric"],
  moonlight: ["Cleric"],
  morningsun: ["Cleric"],
  painsplit: ["Cleric"],
  pollenpuff: ["Cleric"],
  purify: ["Cleric", "Z-Setup"],
  recover: ["Cleric"],
  refresh: ["Cleric"],
  rest: ["Cleric"],
  roost: ["Cleric"],
  shoreup: ["Cleric"],
  slackoff: ["Cleric"],
  softboiled: ["Cleric"],
  strengthsap: ["Cleric"],
  swallow: ["Cleric"],
  synthesis: ["Cleric"],
  wish: ["Cleric"],
  aromatherapy: ["Cleric"],
  healbell: ["Cleric"],
  batonpass: ["Momentum"],
  chillyreception: ["Momentum", "Field Manipulation"],
  flipturn: ["Momentum"],
  partingshot: ["Momentum"],
  revivalblessing: ["Momentum"],
  shedtail: ["Momentum"],
  teleport: ["Momentum"],
  uturn: ["Momentum"],
  voltswitch: ["Momentum"],
  explosion: ["Momentum"],
  selfdestruct: ["Momentum"],
  mistyexplosion: ["Momentum", "Field Manipulation"],
  finalgambit: ["Momentum"],
  memento: ["Momentum"],
  spikes: ["Hazard Control"],
  stealthrock: ["Hazard Control"],
  stickyweb: ["Hazard Control", "Speed Control"],
  toxicspikes: ["Hazard Control"],
  defog: ["Hazard Control"],
  rapidspin: ["Hazard Control"],
  mortalspin: ["Hazard Control", "Status"],
  ceaselessedge: ["Hazard Control"],
  stoneaxe: ["Hazard Control"],
  courtchange: ["Hazard Control"],
  tailwind: ["Speed Control"],
  trickroom: ["Speed Control"],
  bleakwindstorm: ["Speed Control"],
  bulldoze: ["Speed Control"],
  cottonspore: ["Speed Control"],
  stringshot: ["Speed Control"],
  electroweb: ["Speed Control"],
  glaciate: ["Speed Control"],
  icywind: ["Speed Control"],
  afteryou: ["Speed Control"],
  reflect: ["Support"],
  lightscreen: ["Support"],
  auroraveil: ["Support"],
  helpinghand: ["Support"],
  coaching: ["Support"],
  allyswitch: ["Support"],
  ragepowder: ["Support"],
  followme: ["Support"],
  quickguard: ["Support"],
  wideguard: ["Support"],
  beatup: ["Support"],
  craftyshield: ["Support"],
  luckychant: ["Support"],
  matblock: ["Support"],
  mist: ["Support"],
  safeguard: ["Support"],
  dragoncheer: ["Support"],
  darkvoid: ["Status"],
  glare: ["Status"],
  grasswhistle: ["Status"],
  hypnosis: ["Status"],
  lovelykiss: ["Status"],
  nuzzle: ["Status"],
  poisongas: ["Status"],
  poisonpowder: ["Status"],
  sing: ["Status"],
  sleeppowder: ["Status"],
  spore: ["Status"],
  stunspore: ["Status"],
  thunderwave: ["Status"],
  toxic: ["Status"],
  toxicthread: ["Status"],
  willowisp: ["Status"],
  yawn: ["Status"],
  taunt: ["Disruption"],
  encore: ["Disruption"],
  disable: ["Disruption"],
  magiccoat: ["Disruption"],
  knockoff: ["Disruption"],
  trick: ["Disruption"],
  switcheroo: ["Disruption"],
  corrosivegas: ["Disruption"],
  magicroom: ["Disruption"],
  imprison: ["Disruption"],
  circlethrow: ["Disruption"],
  dragontail: ["Disruption"],
  roar: ["Disruption"],
  whirlwind: ["Disruption"],
  haze: ["Disruption"],
  clearsmog: ["Disruption"],
  psychup: ["Disruption"],
  copycat: ["Disruption"],
  mefirst: ["Disruption"],
  snatch: ["Disruption"],
  destinybond: ["Disruption"],
  electricterrain: ["Field Manipulation"],
  grassyterrain: ["Field Manipulation"],
  mistyterrain: ["Field Manipulation"],
  psychicterrain: ["Field Manipulation"],
  raindance: ["Field Manipulation"],
  sandstorm: ["Field Manipulation"],
  snowscape: ["Field Manipulation"],
  hail: ["Field Manipulation"],
  sunnyday: ["Field Manipulation"],
  terrainpulse: ["Field Manipulation"],
  naturepower: ["Field Manipulation"],
  weatherball: ["Field Manipulation"],
  risingvoltage: ["Field Manipulation"],
  expandingforce: ["Field Manipulation"],
  grassyglide: ["Field Manipulation"],
  gravity: ["Field Manipulation"],
  pursuit: ["Trapping"],
  anchorshot: ["Trapping"],
  block: ["Trapping"],
  fairylock: ["Trapping"],
  jawlock: ["Trapping"],
  meanlook: ["Trapping"],
  octolock: ["Trapping"],
  spiderweb: ["Trapping"],
  spiritshackle: ["Trapping"],
  thousandwaves: ["Trapping"],
  bind: ["Trapping"],
  clamp: ["Trapping"],
  firespin: ["Trapping"],
  infestation: ["Trapping"],
  magmastorm: ["Trapping"],
  sandtomb: ["Trapping"],
  snaptrap: ["Trapping"],
  thundercage: ["Trapping"],
  whirlpool: ["Trapping"],
  wrap: ["Trapping"],
  terablast: ["Type Changing"],
  hiddenpower: ["Type Changing"],
  naturalgift: ["Type Changing"],
  multiattack: ["Type Changing"],
  revelationdance: ["Type Changing"],
  technoblast: ["Type Changing"],
  splash: ["Z-Setup"],
  bellydrum: ["Z-Setup"],
  celebrate: ["Z-Setup"],
  conversion: ["Z-Setup"],
  forestscurse: ["Z-Setup"],
  happyhour: ["Z-Setup"],
  holdhands: ["Z-Setup"],
  sketch: ["Z-Setup"],
  trickortreat: ["Z-Setup"],
  clangingscales: ["Z-Setup"],
};

export type Movechart = {
  categoryName: string;
  moves: {
    name: string;
    type: string;
    pokemon: PokemonData[];
  }[];
}[];

export async function movechart(
  team: DraftSpecies[],
  ruleset: Ruleset
): Promise<Movechart> {
  const mc: {
    [key in MoveCategory]: {
      name: string;
      type: TypeName;
      pokemon: Pokemon[];
    }[];
  } = {
    Priority: [],
    Setup: [],
    Cleric: [],
    Momentum: [],
    "Hazard Control": [],
    "Speed Control": [],
    Support: [],
    Status: [],
    Disruption: [],
    "Field Manipulation": [],
    Trapping: [],
    "Type Changing": [],
    "Z-Setup": [],
  };

  for (const moveID in moveList) {
    const move = ruleset.gen.moves.get(moveID);
    if (!move || !move.exists) continue;
    const data = {
      name: move.name,
      type: move.type,
      pokemon: (
        await Promise.all(
          team.map(async (pokemon) => ({
            pokemon,
            canLearn: await pokemon.canLearn(move.id),
          }))
        )
      )
        .filter((result) => result.canLearn)
        .map((result) => result.pokemon.toPokemon()),
    };
    for (const category of moveList[moveID]) {
      mc[category].push(data);
    }
  }

  return Object.entries(mc).map(([category, moves]) => ({
    categoryName: category,
    moves,
  }));
}
